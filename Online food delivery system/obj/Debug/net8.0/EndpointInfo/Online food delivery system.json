{
  "openapi": "3.0.1",
  "info": {
    "title": "Online food delivery system",
    "version": "1.0"
  },
  "paths": {
    "/api/Order": {
      "get": {
        "tags": [
          "Order"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Order"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderDTO"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Order/{id}": {
      "get": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/OrderMenuItem": {
      "get": {
        "tags": [
          "OrderMenuItem"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "OrderMenuItem"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderMenuItem"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderMenuItem"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderMenuItem"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderMenuItem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/OrderMenuItem/{orderId}/{itemId}": {
      "get": {
        "tags": [
          "OrderMenuItem"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "OrderMenuItem"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Payment": {
      "get": {
        "tags": [
          "Payment"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Payment"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Payment"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Payment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Payment"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Payment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Payment/{id}": {
      "get": {
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Payment"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Payment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Payment"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Payment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Payment/Process": {
      "post": {
        "tags": [
          "Payment"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Payment"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Payment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Payment"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Payment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/WeatherForecast": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "operationId": "GetWeatherForecast",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Agent": {
        "required": [
          "agentContact",
          "name"
        ],
        "type": "object",
        "properties": {
          "agentID": {
            "type": "integer",
            "format": "int32"
          },
          "agentContact": {
            "maxLength": 15,
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "deliveries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Delivery"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Customer": {
        "required": [
          "email",
          "name",
          "phone"
        ],
        "type": "object",
        "properties": {
          "customerID": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "phone": {
            "minLength": 1,
            "type": "string",
            "format": "tel"
          },
          "orders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Order"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Delivery": {
        "required": [
          "agentID"
        ],
        "type": "object",
        "properties": {
          "deliveryID": {
            "type": "integer",
            "format": "int32"
          },
          "orderID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "agentID": {
            "type": "integer",
            "format": "int32"
          },
          "agent": {
            "$ref": "#/components/schemas/Agent"
          },
          "payment": {
            "$ref": "#/components/schemas/Payment"
          }
        },
        "additionalProperties": false
      },
      "MenuItem": {
        "required": [
          "description",
          "name",
          "price"
        ],
        "type": "object",
        "properties": {
          "itemID": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "minLength": 1,
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "restaurantID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "restaurant": {
            "$ref": "#/components/schemas/Restaurant"
          },
          "orderMenuItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderMenuItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Order": {
        "type": "object",
        "properties": {
          "orderID": {
            "type": "integer",
            "format": "int32"
          },
          "customerID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "restaurantID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "restaurant": {
            "$ref": "#/components/schemas/Restaurant"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "totalAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "payment": {
            "$ref": "#/components/schemas/Payment"
          },
          "delivery": {
            "$ref": "#/components/schemas/Delivery"
          },
          "orderMenuItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderMenuItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderDTO": {
        "type": "object",
        "properties": {
          "customerID": {
            "type": "integer",
            "format": "int32"
          },
          "restaurantID": {
            "type": "integer",
            "format": "int32"
          },
          "menuItemIDs": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderMenuItem": {
        "type": "object",
        "properties": {
          "orderID": {
            "type": "integer",
            "format": "int32"
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "itemID": {
            "type": "integer",
            "format": "int32"
          },
          "menuItem": {
            "$ref": "#/components/schemas/MenuItem"
          }
        },
        "additionalProperties": false
      },
      "Payment": {
        "required": [
          "paymentMethod"
        ],
        "type": "object",
        "properties": {
          "paymentID": {
            "type": "integer",
            "format": "int32"
          },
          "orderID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "paymentMethod": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "status": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "delivery": {
            "$ref": "#/components/schemas/Delivery"
          }
        },
        "additionalProperties": false
      },
      "Restaurant": {
        "required": [
          "address",
          "availability",
          "restaurantContact",
          "restaurantName"
        ],
        "type": "object",
        "properties": {
          "restaurantID": {
            "type": "integer",
            "format": "int32"
          },
          "restaurantName": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "restaurantContact": {
            "maxLength": 15,
            "minLength": 1,
            "type": "string"
          },
          "availability": {
            "type": "boolean"
          },
          "address": {
            "minLength": 1,
            "type": "string"
          },
          "menuItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MenuItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WeatherForecast": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date"
          },
          "temperatureC": {
            "type": "integer",
            "format": "int32"
          },
          "temperatureF": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}